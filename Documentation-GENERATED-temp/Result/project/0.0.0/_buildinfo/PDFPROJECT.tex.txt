%% Generated by Sphinx.
\def\sphinxdocclass{report}
\documentclass[a4paper,10pt,english]{sphinxmanual}
\ifdefined\pdfpxdimen
   \let\sphinxpxdimen\pdfpxdimen\else\newdimen\sphinxpxdimen
\fi \sphinxpxdimen=.75bp\relax

\PassOptionsToPackage{warn}{textcomp}
\usepackage[utf8]{inputenc}
\ifdefined\DeclareUnicodeCharacter
 \ifdefined\DeclareUnicodeCharacterAsOptional
  \DeclareUnicodeCharacter{"00A0}{\nobreakspace}
  \DeclareUnicodeCharacter{"2500}{\sphinxunichar{2500}}
  \DeclareUnicodeCharacter{"2502}{\sphinxunichar{2502}}
  \DeclareUnicodeCharacter{"2514}{\sphinxunichar{2514}}
  \DeclareUnicodeCharacter{"251C}{\sphinxunichar{251C}}
  \DeclareUnicodeCharacter{"2572}{\textbackslash}
 \else
  \DeclareUnicodeCharacter{00A0}{\nobreakspace}
  \DeclareUnicodeCharacter{2500}{\sphinxunichar{2500}}
  \DeclareUnicodeCharacter{2502}{\sphinxunichar{2502}}
  \DeclareUnicodeCharacter{2514}{\sphinxunichar{2514}}
  \DeclareUnicodeCharacter{251C}{\sphinxunichar{251C}}
  \DeclareUnicodeCharacter{2572}{\textbackslash}
 \fi
\fi
\usepackage{cmap}
\usepackage[T1]{fontenc}
\usepackage{amsmath,amssymb,amstext}
\usepackage{babel}
\usepackage{times}
\usepackage[Bjarne]{fncychap}
\usepackage{sphinx}

\usepackage{geometry}

% Include hyperref last.
\usepackage{hyperref}
% Fix anchor placement for figures with captions.
\usepackage{hypcap}% it must be loaded after hyperref.
% Set up styles of URL: it should be placed after hyperref.
\urlstyle{same}

\addto\captionsenglish{\renewcommand{\figurename}{Fig.}}
\addto\captionsenglish{\renewcommand{\tablename}{Table}}
\addto\captionsenglish{\renewcommand{\literalblockname}{Listing}}

\addto\captionsenglish{\renewcommand{\literalblockcontinuedname}{continued from previous page}}
\addto\captionsenglish{\renewcommand{\literalblockcontinuesname}{continues on next page}}

\addto\extrasenglish{\def\pageautorefname{page}}

\setcounter{tocdepth}{2}

\usepackage{typo3}

\title{C1 adaptive images}
\date{2018-07-03 19:13}
\release{0.1.0}
\author{Manuel Munz}
\newcommand{\sphinxlogo}{\vbox{}}
\renewcommand{\releasename}{Release}
\makeindex

\begin{document}

\maketitle
\sphinxtableofcontents
\phantomsection\label{\detokenize{Index::doc}}



\chapter{Introduction}
\label{\detokenize{Introduction/Index:introduction}}\label{\detokenize{Introduction/Index:start}}\label{\detokenize{Introduction/Index:id1}}\label{\detokenize{Introduction/Index::doc}}\label{\detokenize{Introduction/Index:extension-name}}

\section{What does it do?}
\label{\detokenize{Introduction/Index:what-it-does}}\label{\detokenize{Introduction/Index:what-does-it-do}}
This extension brings a set of Fluid ViewHelpers that are useful for adaptive image rendering.

By using these additional ViewHelpers in combination with Fluids f:image and f:media ViewHelpers rendering of
adaptive images becomes much easier. Using this simple approach (just using ViewHelpers, not registering a custom
ImageRenderer class, which would also be possible) the code stays really simple while at the same time the developer
keeps maximum flexibility in generating the picture or image tag using the commun Fluid ViewHelpers.

\begin{sphinxadmonition}{note}{Note:}
To use this extension, you should already have a good understanding of Fluid and adaptive images (i.e. know what
picture, srcset and sizes are and how to use them).
\end{sphinxadmonition}


\chapter{Users Manual}
\label{\detokenize{User/Index:users-manual}}\label{\detokenize{User/Index::doc}}\label{\detokenize{User/Index:user-manual}}
Target group: \sphinxstylestrong{Editors}

Editors shouldn’t have to care too much about adaptive images except for crop settings, eventually for different
breakpoints using the image editor.


\chapter{Administrator Manual}
\label{\detokenize{Administrator/Index:admin-manual}}\label{\detokenize{Administrator/Index::doc}}\label{\detokenize{Administrator/Index:administrator-manual}}
Target group: \sphinxstylestrong{Administrators}


\section{Installation}
\label{\detokenize{Administrator/Index:admin-installation}}\label{\detokenize{Administrator/Index:installation}}
To install the extension, perform the following steps:
\begin{enumerate}
\item {} 
Go to the Extension Manager

\item {} 
Install the extension

\item {} 
Load the static template

\end{enumerate}


\section{Configuration}
\label{\detokenize{Administrator/Index:configuration}}\label{\detokenize{Administrator/Index:admin-configuration}}\begin{itemize}
\item {} 
overwrite default constants and default setup with your own values.

\end{itemize}


\chapter{Configuration Reference}
\label{\detokenize{Configuration/Index:configuration-reference}}\label{\detokenize{Configuration/Index:configuration}}\label{\detokenize{Configuration/Index::doc}}
Technical information: Installation, Reference of TypoScript options,
configuration options on system level, how to extend it, the technical
details, how to debug it and so on.

Language should be technical, assuming developer knowledge of TYPO3.
Small examples/visuals are always encouraged.

Target group: \sphinxstylestrong{Developers}


\section{TypoScript Reference}
\label{\detokenize{Configuration/Index:configuration-typoscript}}\label{\detokenize{Configuration/Index:typoscript-reference}}
Possible subsections: Reference of TypoScript options.
The construct below show the recommended structure for
TypoScript properties listing and description.

Properties should be listed in the order in which they
are executed by your extension, but the first should be
alphabetical for easier access.

When detailing data types or standard TypoScript
features, don’t hesitate to cross-link to the TypoScript
Reference as shown below. See the \sphinxcode{\sphinxupquote{Settings.yml}}
file for the declaration of cross-linking keys.


\subsection{Constants}
\label{\detokenize{Configuration/Index:constants}}

\subsubsection{Properties}
\label{\detokenize{Configuration/Index:properties}}

\begin{savenotes}\sphinxattablestart
\centering
\begin{tabulary}{\linewidth}[t]{|T|T|T|T|}
\hline
\sphinxstyletheadfamily 
Property
&\sphinxstyletheadfamily 
Data type
&\sphinxstyletheadfamily 
\sphinxhref{https://docs.typo3.org/typo3cms/TyposcriptReference/Functions/Stdwrap/Index.html\#stdwrap}{stdWrap}
&\sphinxstyletheadfamily 
Default
\\
\hline
{\hyperref[\detokenize{Configuration/Index:allwrap}]{\sphinxcrossref{allWrap}}}
&
\sphinxhref{https://docs.typo3.org/typo3cms/TyposcriptReference/DataTypes/Index.html\#data-type-wrap}{wrap}
&
yes
&
\sphinxcode{\sphinxupquote{\textless{}div\textgreater{}\textbar{}\textless{}/div\textgreater{}}}
\\
\hline
{\hyperref[\detokenize{Configuration/Index:subst-elementuid}]{\sphinxcrossref{subst\_elementUid}}}
&
\sphinxhref{https://docs.typo3.org/typo3cms/TyposcriptReference/DataTypes/Index.html\#data-type-boolean}{boolean}
&
no
&
0
\\
\hline
{\hyperref[\detokenize{Configuration/Index:wrapitemandsub}]{\sphinxcrossref{wrapItemAndSub}}}
&
\sphinxhref{https://docs.typo3.org/typo3cms/TyposcriptReference/DataTypes/Index.html\#data-type-wrap}{wrap}
&&\\
\hline
\end{tabulary}
\par
\sphinxattableend\end{savenotes}


\subsubsection{Property details}
\label{\detokenize{Configuration/Index:property-details}}

\paragraph{allWrap}
\label{\detokenize{Configuration/Index:ts-plugin-tx-extensionkey-stdwrap}}\label{\detokenize{Configuration/Index:allwrap}}
\sphinxcode{\sphinxupquote{plugin.tx\_extensionkey.allWrap =}} \sphinxhref{https://docs.typo3.org/typo3cms/TyposcriptReference/DataTypes/Index.html\#data-type-wrap}{wrap}

Wraps the whole item.


\paragraph{wrapItemAndSub}
\label{\detokenize{Configuration/Index:ts-plugin-tx-extensionkey-wrapitemandsub}}\label{\detokenize{Configuration/Index:wrapitemandsub}}
\sphinxcode{\sphinxupquote{plugin.tx\_extensionkey.wrapItemAndSub =}} \sphinxhref{https://docs.typo3.org/typo3cms/TyposcriptReference/DataTypes/Index.html\#data-type-wrap}{wrap}

Wraps the whole item and any submenu concatenated to it.


\paragraph{subst\_elementUid}
\label{\detokenize{Configuration/Index:ts-plugin-tx-extensionkey-substelementuid}}\label{\detokenize{Configuration/Index:subst-elementuid}}
\sphinxcode{\sphinxupquote{plugin.tx\_extensionkey.subst\_elementUid =}} \sphinxhref{https://docs.typo3.org/typo3cms/TyposcriptReference/DataTypes/Index.html\#data-type-boolean}{boolean}

If set, all appearances of the string \sphinxcode{\sphinxupquote{\{elementUid\}}} in the total
element html-code (after wrapped in {\hyperref[\detokenize{Configuration/Index:allwrap}]{\sphinxcrossref{allWrap}}}) are substituted with the
uid number of the menu item. This is useful if you want to insert an
identification code in the HTML in order to manipulate properties with
JavaScript.


\section{FAQ}
\label{\detokenize{Configuration/Index:configuration-faq}}\label{\detokenize{Configuration/Index:faq}}
Possible subsection: FAQ


\chapter{Developer Corner}
\label{\detokenize{Developer/Index:developer-corner}}\label{\detokenize{Developer/Index::doc}}\label{\detokenize{Developer/Index:developer}}
Target group: \sphinxstylestrong{Developers}

Use this section for \sphinxstyleemphasis{providing code examples} or any \sphinxstylestrong{useful} information code wise.


\section{Hooks}
\label{\detokenize{Developer/Index:hooks}}\label{\detokenize{Developer/Index:developer-hooks}}
Possible hook examples. Input parameters are:


\begin{savenotes}\sphinxattablestart
\centering
\begin{tabulary}{\linewidth}[t]{|T|T|T|}
\hline
\sphinxstyletheadfamily 
Parameter
&\sphinxstyletheadfamily 
Data type
&\sphinxstyletheadfamily 
Description
\\
\hline
\$table
&
string
&
Name of the table
\\
\hline
\$field
&
string
&
Name of the field
\\
\hline
\end{tabulary}
\par
\sphinxattableend\end{savenotes}

Use parameter \sphinxcode{\sphinxupquote{\$table}} to retrieve the table name…


\section{API}
\label{\detokenize{Developer/Index:developer-api}}\label{\detokenize{Developer/Index:api}}
How to use the API…

\fvset{hllines={, ,}}%
\begin{sphinxVerbatim}[commandchars=\\\{\}]
\PYG{n+nv}{\PYGZdl{}stuff} \PYG{o}{=} \PYG{n+nx}{\PYGZbs{}TYPO3\PYGZbs{}CMS\PYGZbs{}Core\PYGZbs{}Utility\PYGZbs{}GeneralUtility}\PYG{o}{::}\PYG{n+na}{makeInstance}\PYG{p}{(}
        \PYG{l+s+s1}{\PYGZsq{}\PYGZbs{}\PYGZbs{}Foo\PYGZbs{}\PYGZbs{}Bar\PYGZbs{}\PYGZbs{}Utility\PYGZbs{}\PYGZbs{}Stuff\PYGZsq{}}
\PYG{p}{);}
\PYG{n+nv}{\PYGZdl{}stuff}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n+na}{do}\PYG{p}{();}
\end{sphinxVerbatim}

or some other language:

\fvset{hllines={, 2, 3, 4,}}%
\begin{sphinxVerbatim}[commandchars=\\\{\},numbers=left,firstnumber=1,stepnumber=1]
     \PYG{n+nx}{\PYGZdl{}}\PYG{p}{(}\PYG{n+nb}{document}\PYG{p}{)}\PYG{p}{.}\PYG{n+nx}{ready}\PYG{p}{(}
             \PYG{k+kd}{function} \PYG{p}{(}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                     \PYG{n+nx}{doStuff}\PYG{p}{(}\PYG{p}{)}\PYG{p}{;}
             \PYG{p}{\PYGZcb{}}
     \PYG{p}{)}\PYG{p}{;}
\end{sphinxVerbatim}


\chapter{Known Problems}
\label{\detokenize{KnownProblems/Index:known-problems}}\label{\detokenize{KnownProblems/Index::doc}}\label{\detokenize{KnownProblems/Index:id1}}
Say where bugs can be reported / followed up. Is it a
\sphinxhref{http://forge.typo3.org/projects/typo3cms-doc-official-extension-template/issues}{bug tracker}?
Use this section for informing about any type of of problem
that are not necessarily named in the bug tracker such as performance issues, …


\chapter{To-Do list}
\label{\detokenize{ToDoList/Index:todo}}\label{\detokenize{ToDoList/Index:to-do-list}}\label{\detokenize{ToDoList/Index::doc}}
Give a link pointing to a \sphinxhref{http://forge.typo3.org/projects/typo3cms-doc-official-extension-template/roadmap}{roadmap}.
Alternatively, you can dress up a list of things you want to add or fix in this chapter
or give a vision about where the extension is heading.


\chapter{ChangeLog}
\label{\detokenize{ChangeLog/Index:id1}}\label{\detokenize{ChangeLog/Index::doc}}\label{\detokenize{ChangeLog/Index:changelog}}
Providing a change log chapter is optional. You can also refer
users to the ChangeLog file inside the extension or to some repository’s
commit listing.


\chapter{Links}
\label{\detokenize{Links::doc}}\label{\detokenize{Links:links}}\label{\detokenize{Links:id1}}\begin{quote}\begin{description}
\item[{TER}] \leavevmode
\sphinxurl{https://typo3.org/extensions/repository/view}/\textless{}extension key\textgreater{}

\item[{Bug Tracker}] \leavevmode
\sphinxurl{https://forge.typo3.org/projects/extension}-\textless{}extension key\textgreater{}/issues

\item[{Git Repository}] \leavevmode
\sphinxurl{https://github.com}/\textless{}username\textgreater{}/\textless{}extension key\textgreater{}

\item[{Contact}] \leavevmode
\sphinxhref{https://twitter.com/your-username}{@\textless{}username\textgreater{}}

\end{description}\end{quote}



\renewcommand{\indexname}{Index}
\printindex
\end{document}